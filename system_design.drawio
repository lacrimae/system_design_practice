<mxfile host="app.diagrams.net" agent="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36" version="26.1.2" pages="6">
  <diagram id="XteTEbKlLTetxFG-Vj9d" name="tinyurl">
    <mxGraphModel dx="2753" dy="1781" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="0" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="c8CjNAbtBmhlcYozAXpE-1" value="Load Balancer&lt;div&gt;- Round Robin&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-135" y="-100" width="90" height="90" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-2" value="&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Functional Requirements:&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- create a short url from a long url&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;* optionally support customer alias&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;* optionally support an expiration time&lt;/div&gt;&lt;div&gt;- be redirected to the original url from the short url&amp;nbsp;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=#82b366;fillColor=#d5e8d4;" vertex="1" parent="1">
          <mxGeometry x="-805" y="-418" width="290" height="90" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-3" value="Bit.ly is a URL shortening service that converts long URLs into shorter, manageable links. It also provides analytics for the shortened URLs.&#xa;i.e. www.longurl.com/long/is/annoying -&gt; www.bit.ly/GHJ23&#xa;Short url redirect to the original url." style="text;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-805" y="-500" width="760" height="60" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-4" value="Non-functional Requirements:&lt;div&gt;- low latency on redirects (~200ms): indexing, cache&lt;/div&gt;&lt;div&gt;- scale to support 100M DAU and 1B urls&lt;/div&gt;&lt;div&gt;- ensure uniqueness of short codes&lt;/div&gt;&lt;div&gt;- high availability over consistency, eventual consistency for url shortening&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=#6c8ebf;fillColor=#dae8fc;" vertex="1" parent="1">
          <mxGeometry x="-805" y="-308" width="420" height="90" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-5" value="Back of the Envelope Estimations - BOTE:&lt;div&gt;- scale&lt;/div&gt;&lt;div&gt;- latency&lt;/div&gt;&lt;div&gt;- storage&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-805" y="-208" width="250" height="70" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-6" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="c8CjNAbtBmhlcYozAXpE-7" target="c8CjNAbtBmhlcYozAXpE-9">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-7" value="Requirements" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-90" y="-308" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-8" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="c8CjNAbtBmhlcYozAXpE-9" target="c8CjNAbtBmhlcYozAXpE-11">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-9" value="Core Entities" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="50" y="-308" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-10" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="c8CjNAbtBmhlcYozAXpE-11" target="c8CjNAbtBmhlcYozAXpE-13">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-11" value="API or Interface" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="190" y="-308" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-12" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="c8CjNAbtBmhlcYozAXpE-13" target="c8CjNAbtBmhlcYozAXpE-15">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-13" value="Data Flow" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="330" y="-308" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-14" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="c8CjNAbtBmhlcYozAXpE-15" target="c8CjNAbtBmhlcYozAXpE-16">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-15" value="High-level Design" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="470" y="-308" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-16" value="Deep Dives" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="610" y="-308" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-17" value="Primary Goal: Satisfy Non-functional Requirements" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="15" y="-440" width="290" height="30" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-18" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;curved=1;exitX=-0.012;exitY=0.411;exitDx=0;exitDy=0;exitPerimeter=0;" edge="1" parent="1" source="c8CjNAbtBmhlcYozAXpE-19" target="c8CjNAbtBmhlcYozAXpE-7">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="-30" y="-386" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-19" value="Primary Goal: Satisfy Functional Requirements" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="25" y="-398" width="270" height="30" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-20" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;curved=1;exitX=-0.005;exitY=0.478;exitDx=0;exitDy=0;exitPerimeter=0;" edge="1" parent="1" source="c8CjNAbtBmhlcYozAXpE-17" target="c8CjNAbtBmhlcYozAXpE-7">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="-4" y="-422" as="sourcePoint" />
            <mxPoint x="-56" y="-344" as="targetPoint" />
            <Array as="points">
              <mxPoint x="14" y="-430" />
              <mxPoint x="-56" y="-430" />
              <mxPoint x="-56" y="-308" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-21" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=1.005;entryY=0.456;entryDx=0;entryDy=0;entryPerimeter=0;curved=1;" edge="1" parent="1" source="c8CjNAbtBmhlcYozAXpE-15" target="c8CjNAbtBmhlcYozAXpE-19">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="530" y="-384" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-22" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;curved=1;" edge="1" parent="1" source="c8CjNAbtBmhlcYozAXpE-16">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="584" y="-352" as="sourcePoint" />
            <mxPoint x="320" y="-428" as="targetPoint" />
            <Array as="points">
              <mxPoint x="670" y="-428" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-23" value="1. Requirements" style="whiteSpace=wrap;html=1;fillColor=#f5f5f5;fontColor=#333333;strokeColor=#666666;align=center;" vertex="1" parent="1">
          <mxGeometry x="-805" y="-570" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-24" value="2. Core Entities" style="whiteSpace=wrap;html=1;fillColor=#f5f5f5;fontColor=#333333;strokeColor=#666666;" vertex="1" parent="1">
          <mxGeometry x="-805" y="-110" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-25" value="- Original URL&lt;div&gt;- Short URL (generated by our system)&lt;/div&gt;&lt;div&gt;- User who created the URL&lt;/div&gt;&lt;div&gt;- Creation Date&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-805" y="-30" width="230" height="70" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-26" value="3. API" style="whiteSpace=wrap;html=1;fillColor=#f5f5f5;fontColor=#333333;strokeColor=#666666;" vertex="1" parent="1">
          <mxGeometry x="-804" y="60" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-27" value="// &lt;b&gt;shorten an URL - REST API&lt;/b&gt;&lt;div&gt;POST endpoint /urls&amp;nbsp;&lt;/div&gt;&lt;div&gt;requestBody: String url or:&lt;/div&gt;&lt;div&gt;{&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;String originalUrl,&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;alias?,&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;Timestamp expirationTime?&lt;br&gt;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;responseBody: String newly generated short url&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;// &lt;b&gt;redirection&lt;/b&gt;&lt;/div&gt;&lt;div&gt;GET endpoint /urls {shortUrl} -&amp;gt; redirect to the original url&lt;/div&gt;&lt;div&gt;requestBody: none&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;responseBody: String original url&lt;/span&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-805" y="150" width="330" height="220" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-29" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="c8CjNAbtBmhlcYozAXpE-30" target="c8CjNAbtBmhlcYozAXpE-48">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-30" value="Client" style="ellipse;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-400" y="30" width="100" height="80" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-31" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;startArrow=block;startFill=1;endArrow=classic;endFill=1;" edge="1" parent="1" source="c8CjNAbtBmhlcYozAXpE-53" target="c8CjNAbtBmhlcYozAXpE-33">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="120" y="75" as="sourcePoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-32" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;curved=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;startArrow=classic;startFill=1;" edge="1" parent="1" source="c8CjNAbtBmhlcYozAXpE-42" target="c8CjNAbtBmhlcYozAXpE-38">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="100" y="-119.99999999999977" as="targetPoint" />
            <mxPoint x="60" y="-10" as="sourcePoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-33" value="Database" style="shape=cylinder3;whiteSpace=wrap;html=1;boundedLbl=1;backgroundOutline=1;size=15;" vertex="1" parent="1">
          <mxGeometry x="260" y="95" width="60" height="80" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-34" value="Url Table&lt;div&gt;&lt;br&gt;&lt;div style=&quot;text-align: left;&quot;&gt;- shortUrl/customerAlias (pk)&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;- longUrl&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;- creationTime&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;- expirationTime&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;-userId&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;shortUrl: 8 bytes&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;longUrl: 100 bytes&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;creationTime: 8 bytes&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;expirationTime: 8 bytes&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;userId: 100 bytes&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;= 232 bytes ~ 500 bytes&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;500 * 1B = 500B bytes = &lt;b&gt;500GB&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;500 000 000 000 bytes&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;500 000 000 kb&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;500 000 mb&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;500 gb&lt;/div&gt;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="400" y="-100" width="190" height="320" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-35" value="User Table&lt;div&gt;&amp;nbsp;&lt;br&gt;&lt;div style=&quot;text-align: left;&quot;&gt;- userId&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;- ...&lt;/div&gt;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="600" y="-100" width="80" height="70" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-36" value="- 302 redirect: temporary, redirects only for this request&lt;div&gt;- 301 redirect: permanent, the browser caches this and redirects automatically in the future&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-475" y="361" width="500" height="40" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-37" value="Creation:&lt;div&gt;- fast&lt;/div&gt;&lt;div&gt;- unique&lt;/div&gt;&lt;div&gt;- short (5 to 7 chars)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;1. prefix of the long url: bad decision, will produce collisions since there&#39;re urls which start with the same prefix&lt;/div&gt;&lt;div&gt;2. random number generator 10^9 chars (more than 5-7)&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;- base62 encoding, 0-9, A-Z, a-z: 10 + 26 + 26 = 62 chars&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;- 62^6 = 56B -&amp;gt; high chance of a collision&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;- Birthday Paradox&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;- 880k collisions for every 1B&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;- we just need to check for collision first (gives an extra READ operation)&lt;br&gt;&lt;/div&gt;&lt;div&gt;3. Hash the long url&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;- md5 (longUrl) -&amp;gt; hash -&amp;gt; base62(hash) -&amp;gt; substring(0, 7)&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;- same as above (need to check the db first)&lt;br&gt;&lt;/div&gt;&lt;div&gt;4. Counter&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;- incrementing a counter -&amp;gt; base62&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;- pros: no collisions, cons: predictability which is bad for security&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;- &quot;warning, don&#39;t shorten private urls&quot;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;- rate limiting&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;- bijective function&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;- sqids.org&lt;br&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-485" y="420" width="610" height="330" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-38" value="Redis/MemCache" style="ellipse;whiteSpace=wrap;html=1;aspect=fixed;" vertex="1" parent="1">
          <mxGeometry x="150" y="-160" width="110" height="110" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-39" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;curved=1;entryX=1;entryY=0.5;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;startArrow=classic;startFill=1;exitPerimeter=0;" edge="1" parent="1" source="c8CjNAbtBmhlcYozAXpE-33" target="c8CjNAbtBmhlcYozAXpE-38">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="170" y="-115" as="targetPoint" />
            <mxPoint x="70" as="sourcePoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-40" value="- read through&lt;div&gt;- LRU cache&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;key: shortUrl&lt;/div&gt;&lt;div&gt;value: longUrl&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="275" y="-200" width="100" height="90" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-41" value="&lt;div&gt;&lt;div style=&quot;&quot;&gt;scale to support 100M DAU and 1B urls&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;1 user make 1 call per day on average&lt;/div&gt;&lt;div&gt;10^8 calls per day (100M)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;there&#39;s 100,000 (10^5) seconds per day&lt;/div&gt;&lt;div&gt;10^8/10^5 = 10^3 = 1000 request per second if it&#39;s evenly distributed&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;peak is 10^3 * 10 (100) = 10^4 to 10^5 rps&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;EC2 average instance (T3 medium) can handle around 10^3/1000 rps&lt;/div&gt;&lt;div&gt;10^5/10^3 = 10^2/100&amp;nbsp; instances&lt;/div&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="430" y="350" width="390" height="190" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-42" value="Read Service&lt;div&gt;- lookup long from short&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-30" y="-30" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-43" value="Write Service&lt;div&gt;- creates short url&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-30" y="60" width="120" height="110" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-44" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;startArrow=classic;startFill=1;" edge="1" parent="1" source="c8CjNAbtBmhlcYozAXpE-48" target="c8CjNAbtBmhlcYozAXpE-42">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-45" value="getShortUrl(longUrl)&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="c8CjNAbtBmhlcYozAXpE-44">
          <mxGeometry x="0.0632" y="3" relative="1" as="geometry">
            <mxPoint y="-1" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-46" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;startArrow=classic;startFill=1;" edge="1" parent="1" source="c8CjNAbtBmhlcYozAXpE-48" target="c8CjNAbtBmhlcYozAXpE-43">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-47" value="redirect(shortUrl)" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="c8CjNAbtBmhlcYozAXpE-46">
          <mxGeometry x="-0.146" y="-2" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-48" value="API Gateway" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-210" y="-90" width="60" height="320" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-49" value="Counter" style="rounded=1;whiteSpace=wrap;html=1;gradientColor=none;direction=west;" vertex="1" parent="1">
          <mxGeometry x="-5" y="127.5" width="70" height="30" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-50" value="Read Service&lt;div&gt;- lookup long from short&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-20" y="-20" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-51" value="Read Service&lt;div&gt;- lookup long from short&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-10" y="-10" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-52" value="Write Service&lt;div&gt;- creates short url&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-20" y="70" width="120" height="110" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-53" value="Write Service&lt;div&gt;- creates short url&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-10" y="80" width="120" height="110" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-54" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=1;entryDx=0;entryDy=0;curved=1;startArrow=classic;startFill=1;" edge="1" parent="1" source="c8CjNAbtBmhlcYozAXpE-55" target="c8CjNAbtBmhlcYozAXpE-53">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-55" value="Global Counter&lt;div&gt;- Redis&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;INCR&lt;/div&gt;" style="ellipse;whiteSpace=wrap;html=1;aspect=fixed;" vertex="1" parent="1">
          <mxGeometry x="140" y="200" width="90" height="90" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-56" value="Redis is single threaded so we don&#39;t need to think about concurrency" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-10" y="308" width="390" height="30" as="geometry" />
        </mxCell>
        <mxCell id="c8CjNAbtBmhlcYozAXpE-57" value="1 byte * 1024 = 1 kb * 1024 = 1 mb * 1024 = 1 gb * 1024 = 1 tb&lt;div&gt;&lt;br&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="430" y="280" width="360" height="60" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram name="youtube" id="Ptf_d_CCf5I-wh_goVZh">
    <mxGraphModel dx="2753" dy="2181" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="0" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="PlQ0SCh3now162u1fZZV-1" value="Functional Requirements:&lt;div&gt;&lt;div&gt;- Users should be able to upload a video&lt;/div&gt;&lt;div&gt;- Users should be able to watch/stream videos&lt;/div&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;fontSize=16;" parent="1" vertex="1">
          <mxGeometry x="-896.5" y="-993" width="346" height="70" as="geometry" />
        </mxCell>
        <mxCell id="PlQ0SCh3now162u1fZZV-2" value="1. Requirements" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=#666666;fillColor=#f5f5f5;fontSize=16;fontColor=#333333;" parent="1" vertex="1">
          <mxGeometry x="-896.5" y="-1047.5" width="135" height="31" as="geometry" />
        </mxCell>
        <mxCell id="PlQ0SCh3now162u1fZZV-3" value="Scale:&lt;div&gt;100M DAU&lt;/div&gt;&lt;div&gt;1/100 will upload a video - 1M uploads per day&lt;/div&gt;&lt;div&gt;10 videos to watch per user per day - 100M * 10 = 1000M = 1B&lt;/div&gt;&lt;div&gt;max video size - 256GB&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=16;" parent="1" vertex="1">
          <mxGeometry x="-896.5" y="-906" width="464" height="108" as="geometry" />
        </mxCell>
        <mxCell id="PlQ0SCh3now162u1fZZV-4" value="Non-functional Requirements:&lt;div&gt;- Availability &amp;gt;&amp;gt; Consistency for video uploads (eventual consistency)&lt;/div&gt;&lt;div&gt;- Support upload/streaming for large videos&lt;/div&gt;&lt;div&gt;- Low Latency Streaming (&amp;lt;500ms) true in low bandwidth&lt;/div&gt;&lt;div&gt;- Scalability to scale 1M uploads/1B views daily&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=16;" parent="1" vertex="1">
          <mxGeometry x="-896.5" y="-783" width="507" height="108" as="geometry" />
        </mxCell>
        <mxCell id="PlQ0SCh3now162u1fZZV-5" value="2. Core Entities" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=#666666;fillColor=#f5f5f5;fontSize=16;fontColor=#333333;" parent="1" vertex="1">
          <mxGeometry x="-892.5" y="-643" width="127" height="31" as="geometry" />
        </mxCell>
        <mxCell id="PlQ0SCh3now162u1fZZV-6" value="- Video&lt;div&gt;- Video Metadata&lt;/div&gt;&lt;div&gt;- User&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=16;" parent="1" vertex="1">
          <mxGeometry x="-892.5" y="-601" width="140" height="70" as="geometry" />
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-1" value="Video has 2 parts: actual video (bytes),&lt;div&gt;and the metadata (title, description, etc)&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-732" y="-610" width="229" height="41" as="geometry" />
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-2" value="3. API" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=#666666;fillColor=#f5f5f5;fontSize=16;fontColor=#333333;" parent="1" vertex="1">
          <mxGeometry x="-892.5" y="-488" width="61" height="31" as="geometry" />
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-3" value="&lt;font style=&quot;font-size: 16px;&quot;&gt;// upload a video&lt;/font&gt;&lt;div&gt;&lt;font style=&quot;font-size: 16px;&quot;&gt;POST /videos&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 16px;&quot;&gt;{&lt;/font&gt;&lt;/div&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;div&gt;&lt;font style=&quot;font-size: 16px;&quot;&gt;&lt;strike&gt;Video, &lt;/strike&gt;(will upload directly to S3)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 16px;&quot;&gt;VideoMetadata&lt;/font&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;font style=&quot;font-size: 16px;&quot;&gt;}&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 16px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 16px;&quot;&gt;// watch a video&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;GET /videos/{videoId} -&amp;gt; Video &amp;amp; VideoMetadata&lt;/span&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-896.5" y="-432" width="364" height="185" as="geometry" />
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-6" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;startArrow=classic;startFill=1;" parent="1" source="Sh0EnFzFZQxE2yDh7pOI-4" target="Sh0EnFzFZQxE2yDh7pOI-5" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-4" value="Client" style="rounded=0;whiteSpace=wrap;html=1;fontSize=16;" parent="1" vertex="1">
          <mxGeometry x="-122" y="-700" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-8" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="Sh0EnFzFZQxE2yDh7pOI-5" target="Sh0EnFzFZQxE2yDh7pOI-7" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-5" value="Api gateway&lt;div&gt;- routing&lt;/div&gt;&lt;div&gt;- middleware (authentication, rate limiting, load balancer)&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontSize=16;align=center;" parent="1" vertex="1">
          <mxGeometry x="87" y="-795" width="124" height="250" as="geometry" />
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-7" value="Video Service" style="whiteSpace=wrap;html=1;fontSize=16;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="293" y="-700" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-27" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="1" source="Sh0EnFzFZQxE2yDh7pOI-11" target="Sh0EnFzFZQxE2yDh7pOI-26" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-28" value="s3 even notification" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="Sh0EnFzFZQxE2yDh7pOI-27" vertex="1" connectable="0">
          <mxGeometry x="-0.2869" y="3" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-11" value="Video data DB&lt;div&gt;(S3 blobs)&lt;/div&gt;" style="shape=cylinder3;whiteSpace=wrap;html=1;boundedLbl=1;backgroundOutline=1;size=15;fontSize=16;" parent="1" vertex="1">
          <mxGeometry x="499" y="-837" width="86" height="93" as="geometry" />
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-12" value="&lt;font style=&quot;font-size: 16px;&quot;&gt;VideoMeta data DB (Postgres)&lt;/font&gt;" style="shape=cylinder3;whiteSpace=wrap;html=1;boundedLbl=1;backgroundOutline=1;size=15;" parent="1" vertex="1">
          <mxGeometry x="499" y="-618" width="86" height="93" as="geometry" />
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-13" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;entryPerimeter=0;startArrow=classic;startFill=1;" parent="1" source="iS1Ttse3CEID1Txa0kVD-4" target="Sh0EnFzFZQxE2yDh7pOI-12" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-17" value="store metadata" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="Sh0EnFzFZQxE2yDh7pOI-13" vertex="1" connectable="0">
          <mxGeometry x="-0.1126" y="-1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-14" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.006;entryY=0.581;entryDx=0;entryDy=0;entryPerimeter=0;startArrow=classic;startFill=1;" parent="1" source="Sh0EnFzFZQxE2yDh7pOI-7" target="Sh0EnFzFZQxE2yDh7pOI-11" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-16" value="&lt;strike&gt;upload video&lt;/strike&gt;&lt;div&gt;get pre-signed urls&lt;/div&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="Sh0EnFzFZQxE2yDh7pOI-14" vertex="1" connectable="0">
          <mxGeometry x="-0.0871" y="-3" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-18" value="most components have some maximum on the total number of MB of the POST requests&lt;div&gt;for instance, AWS API Gateway has maximum&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;10 MB&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;so we cannot upload the whole video (we support up to 256GB per video)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;solution: upload in chunks&lt;/span&gt;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-96" y="-525" width="490" height="70" as="geometry" />
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-19" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;entryPerimeter=0;curved=1;" parent="1" source="Sh0EnFzFZQxE2yDh7pOI-4" target="Sh0EnFzFZQxE2yDh7pOI-11" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="-62" y="-886" />
              <mxPoint x="542" y="-886" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-21" value="&lt;span style=&quot;color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: center; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: nowrap; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;&quot;&gt;1. upload directly to S3&lt;/span&gt;&lt;div style=&quot;forced-color-adjust: none; color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: center; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: nowrap; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;w/ multipart upload (chunks)&lt;/div&gt;&lt;div style=&quot;forced-color-adjust: none; color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: center; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: nowrap; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;2. download directly from S3 (chunks)&lt;/div&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="Sh0EnFzFZQxE2yDh7pOI-19" vertex="1" connectable="0">
          <mxGeometry x="0.1542" y="3" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-22" value="- chunk&lt;div&gt;- PUT /presignedurls&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-122" y="-629" width="128" height="41" as="geometry" />
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-23" value="video_metadata&lt;br&gt;&lt;div&gt;{&lt;/div&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;div&gt;id,&lt;/div&gt;&lt;div&gt;name,&lt;/div&gt;&lt;div&gt;description,&lt;/div&gt;&lt;div&gt;status: pending | uploaded | chunking | chunks_complete,&lt;/div&gt;&lt;div&gt;fullS3Url,&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;go to the manifest file which is stored in S3 &amp;amp; CDN&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;strike&gt;chunks_by_resolution&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;[] &lt;/span&gt;&lt;/strike&gt;&lt;span style=&quot;text-decoration-line: line-through; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;// s3 chunk urls&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;strike&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;{&lt;/span&gt;&lt;/strike&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;strike&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;240p: [],&amp;nbsp; manifest file&lt;br&gt;&lt;/strike&gt;&lt;/span&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;strike&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;720p: [],&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;...&lt;br&gt;&lt;/strike&gt;&lt;/span&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;strike&gt;}&lt;/strike&gt;&lt;/span&gt;&lt;/blockquote&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="429" y="-462" width="363" height="257" as="geometry" />
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-24" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;entryPerimeter=0;" parent="1" source="Sh0EnFzFZQxE2yDh7pOI-11" target="Sh0EnFzFZQxE2yDh7pOI-12" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-25" value="s3 event notification" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="Sh0EnFzFZQxE2yDh7pOI-24" vertex="1" connectable="0">
          <mxGeometry x="-0.1077" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-32" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;curved=1;" parent="1" source="Sh0EnFzFZQxE2yDh7pOI-26" target="Sh0EnFzFZQxE2yDh7pOI-12" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="543" y="-621" as="targetPoint" />
            <Array as="points">
              <mxPoint x="850" y="-867" />
              <mxPoint x="850" y="-621" />
              <mxPoint x="542" y="-621" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-33" value="updates metadata" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="Sh0EnFzFZQxE2yDh7pOI-32" vertex="1" connectable="0">
          <mxGeometry x="0.3658" y="-3" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-53" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="Sh0EnFzFZQxE2yDh7pOI-26" target="Sh0EnFzFZQxE2yDh7pOI-50" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-54" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="Sh0EnFzFZQxE2yDh7pOI-26" target="Sh0EnFzFZQxE2yDh7pOI-49" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-55" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="Sh0EnFzFZQxE2yDh7pOI-26" target="Sh0EnFzFZQxE2yDh7pOI-48" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-56" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="Sh0EnFzFZQxE2yDh7pOI-26" target="Sh0EnFzFZQxE2yDh7pOI-47" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-26" value="Chunker" style="rounded=1;whiteSpace=wrap;html=1;fontSize=16;" parent="1" vertex="1">
          <mxGeometry x="710" y="-897" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-29" value="2-10s clips" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="732.5" y="-814" width="75" height="26" as="geometry" />
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-30" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;entryPerimeter=0;curved=1;" parent="1" source="Sh0EnFzFZQxE2yDh7pOI-26" target="Sh0EnFzFZQxE2yDh7pOI-11" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-31" value="store chunks back in S3" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="Sh0EnFzFZQxE2yDh7pOI-30" vertex="1" connectable="0">
          <mxGeometry x="-0.039" y="1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-34" value="Chunks for upload and read/streaming are different:&lt;div&gt;upload uses really large chunks (5-10mb) to minimize the amount of requests, no consideration fro playback experience&lt;/div&gt;&lt;div&gt;Streaming chunks are optimized for the playback experience, so they&#39;re all small segments (2-10s)&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-240" y="-1053" width="653" height="55" as="geometry" />
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-35" value="&lt;div style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Video Container (mp4, mov, avi, etc)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- video codec data (H.264, Vp9, Av1)&lt;/div&gt;&lt;div&gt;- audio codec data (MP3, Opus, etc)&lt;/div&gt;&lt;div&gt;- parameters (bitrate, resolution, frame rate, aspect ration, duration)&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="165" y="-1192" width="376" height="70" as="geometry" />
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-57" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;curved=1;" parent="1" source="Sh0EnFzFZQxE2yDh7pOI-47" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="542" y="-523" as="targetPoint" />
            <Array as="points">
              <mxPoint x="1073" y="-489" />
              <mxPoint x="542" y="-489" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-47" value="Transcoder&lt;div&gt;(4k)&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=16;" parent="1" vertex="1">
          <mxGeometry x="1013" y="-778" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-48" value="Transcoder&lt;div&gt;(1080p)&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=16;" parent="1" vertex="1">
          <mxGeometry x="1013" y="-853.5" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-49" value="Transcoder&lt;div&gt;(720p)&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=16;" parent="1" vertex="1">
          <mxGeometry x="1011" y="-929" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-50" value="Transcoder&lt;div&gt;(240p)&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=16;" parent="1" vertex="1">
          <mxGeometry x="1013" y="-1103" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-52" value=".&lt;div&gt;.&lt;/div&gt;&lt;div&gt;.&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=25;" parent="1" vertex="1">
          <mxGeometry x="1060.5" y="-1043" width="25" height="102" as="geometry" />
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-58" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;entryPerimeter=0;curved=1;" parent="1" source="Sh0EnFzFZQxE2yDh7pOI-50" target="Sh0EnFzFZQxE2yDh7pOI-11" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-59" value="store chunks_by_resolution back in s3" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="Sh0EnFzFZQxE2yDh7pOI-58" vertex="1" connectable="0">
          <mxGeometry x="-0.0799" y="12" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-62" value="CDN" style="ellipse;whiteSpace=wrap;html=1;aspect=fixed;" parent="1" vertex="1">
          <mxGeometry x="-145" y="-919" width="78" height="78" as="geometry" />
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-63" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.127;entryY=-0.067;entryDx=0;entryDy=0;entryPerimeter=0;startArrow=classic;startFill=1;" parent="1" source="Sh0EnFzFZQxE2yDh7pOI-62" target="Sh0EnFzFZQxE2yDh7pOI-4" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-64" value="- have popular video chunks" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-116" y="-951" width="168" height="26" as="geometry" />
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-65" value="&lt;blockquote style=&quot;forced-color-adjust: none; color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: nowrap; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; margin: 0px 0px 0px 40px; border: none; padding: 0px;&quot;&gt;&lt;span style=&quot;forced-color-adjust: none; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;{&lt;/span&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;forced-color-adjust: none; color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: nowrap; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; margin: 0px 0px 0px 40px; border: none; padding: 0px;&quot;&gt;&lt;span style=&quot;forced-color-adjust: none; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;forced-color-adjust: none; white-space: pre;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;240p: [],&amp;nbsp; manifest file&lt;br style=&quot;forced-color-adjust: none;&quot;&gt;&lt;/span&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;forced-color-adjust: none; color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: nowrap; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; margin: 0px 0px 0px 40px; border: none; padding: 0px;&quot;&gt;&lt;span style=&quot;forced-color-adjust: none; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;forced-color-adjust: none; white-space: pre;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;720p: [],&lt;br style=&quot;forced-color-adjust: none;&quot;&gt;&lt;span style=&quot;forced-color-adjust: none; white-space: pre;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;...&lt;br style=&quot;forced-color-adjust: none;&quot;&gt;&lt;/span&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;forced-color-adjust: none; color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: nowrap; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; margin: 0px 0px 0px 40px; border: none; padding: 0px;&quot;&gt;&lt;span style=&quot;forced-color-adjust: none; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;}&lt;/span&gt;&lt;/blockquote&gt;" style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="-335" y="-925.44" width="194.56" height="111.44" as="geometry" />
        </mxCell>
        <mxCell id="Sh0EnFzFZQxE2yDh7pOI-66" value="Streaming Protocols:&lt;div&gt;1. HLS (HTTP Live Streaming)&lt;/div&gt;&lt;div&gt;2. DASH (Dynamic Adaptive Streaming over HTTP)&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-237" y="-415" width="291" height="55" as="geometry" />
        </mxCell>
        <mxCell id="iS1Ttse3CEID1Txa0kVD-3" value="Video Service" style="whiteSpace=wrap;html=1;fontSize=16;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="303" y="-690" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="iS1Ttse3CEID1Txa0kVD-4" value="Video Service" style="whiteSpace=wrap;html=1;fontSize=16;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="313" y="-680" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="iS1Ttse3CEID1Txa0kVD-5" value="1M entries per day * 1kb * 365 = 365 000 000 KB = .35TB&lt;div&gt;shard by videoId sort key by time&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="596" y="-592" width="325" height="41" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="JPT7PNa8H3Ak_uj5RF2g" name="instagram">
    <mxGraphModel dx="3160" dy="2144" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="0" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="sS5vmSUBj571SvYDJTSG-1" value="1. Requirements" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=#666666;fillColor=#f5f5f5;fontColor=#333333;" vertex="1" parent="1">
          <mxGeometry x="-330" y="-150" width="106" height="26" as="geometry" />
        </mxCell>
        <mxCell id="sS5vmSUBj571SvYDJTSG-2" value="Functional Requirements:&lt;div&gt;1.&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Users should be able to create posts featuring photos, videos, and a simple caption.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;2. Users should be able to follow other users.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;3. Users should be able to see a chronological feed of posts from the users they follow&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;div style=&quot;&quot;&gt;Below the line (out of scope):&lt;/div&gt;&lt;div style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- Users should be able to like and comment on posts.&lt;/div&gt;&lt;div style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- Users should be able to search for users, hashtags, or locations.&lt;/div&gt;&lt;div style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- Users should be able to create and view stories (ephemeral content).&lt;/div&gt;&lt;div style=&quot;color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;- Users should be able to go live (real-time video streaming).&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-330" y="-109" width="477" height="170" as="geometry" />
        </mxCell>
        <mxCell id="sS5vmSUBj571SvYDJTSG-3" value="Non-Functional Requirements:&lt;div&gt;1. The system should be highly available, prioritizing availability of photos/videos over consistency&amp;nbsp;&lt;/div&gt;&lt;div&gt;(eventual consistency is fine, up to 2 minutes).&lt;/div&gt;&lt;div&gt;&lt;div&gt;2. The system should deliver feed content with low latency (&amp;lt; 500ms end-to-end response time for feed requests).&lt;/div&gt;&lt;div&gt;3. The system should render photos and videos instantly (low latency media delivery).&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;photos up to 8mb&lt;/div&gt;&lt;div&gt;videos up to 4gb&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;4. The system should be scalable to support 500M DAU.&lt;/div&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-330" y="88" width="622" height="156" as="geometry" />
        </mxCell>
        <mxCell id="sS5vmSUBj571SvYDJTSG-4" value="2. Core Entities" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=#666666;fillColor=#f5f5f5;fontColor=#333333;" vertex="1" parent="1">
          <mxGeometry x="-330" y="270" width="100" height="26" as="geometry" />
        </mxCell>
        <mxCell id="sS5vmSUBj571SvYDJTSG-5" value="User{&lt;div style=&quot;&quot;&gt;id: uuid,&lt;/div&gt;&lt;div style=&quot;&quot;&gt;user_name: text&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;// represents followers&#39; relationship&lt;/div&gt;&lt;div&gt;// unidirectional mapping&lt;/div&gt;&lt;div&gt;Follow{&lt;/div&gt;&lt;div&gt;follower_id: uuid&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;FK to user.id&lt;/span&gt;&lt;/div&gt;&lt;div&gt;followed_id: uuid FK to user.id&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Post{&lt;/div&gt;&lt;div&gt;id: uuid,&lt;/div&gt;&lt;div&gt;creator: uuid FK to user.id,&lt;/div&gt;&lt;div&gt;link_S3,&lt;/div&gt;&lt;div&gt;description: text,&lt;/div&gt;&lt;div&gt;created_at: timestamp&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;// will store in the S3 blob srotage&lt;/div&gt;&lt;div&gt;Media {&lt;/div&gt;&lt;div&gt;data: [] bytes&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-330" y="319" width="202" height="386" as="geometry" />
        </mxCell>
        <mxCell id="sS5vmSUBj571SvYDJTSG-6" value="3. API" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=#666666;fillColor=#f5f5f5;fontColor=#333333;" vertex="1" parent="1">
          <mxGeometry x="-330" y="717" width="50" height="26" as="geometry" />
        </mxCell>
        <mxCell id="sS5vmSUBj571SvYDJTSG-7" value="1. POST /posts -&amp;gt; postId&lt;div&gt;{&lt;/div&gt;&lt;div&gt;&quot;&lt;strike&gt;media&quot;: {photo or video bytes}, &lt;/strike&gt;will use multi-part upload&lt;/div&gt;&lt;div&gt;&quot;media_metadata&quot;: {size, type}&lt;/div&gt;&lt;div&gt;&quot;description&quot;: &quot;dummy text&quot;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;2. POST /follows&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;{&lt;/div&gt;&lt;div&gt;&quot;followedId: &quot;123&quot;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;gt;&amp;nbsp;The follower&#39;s ID will be extracted from the authentication token (JWT or session),&lt;/div&gt;&lt;div&gt;so we don&#39;t need to specify it in the request body.&lt;/div&gt;&lt;div&gt;This is both more secure and follows the principle of least privilege.&amp;nbsp;&lt;/div&gt;&lt;div&gt;In practice, it&#39;s fine to include here, you&#39;ll just need to compare it to the session before following.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;3.&amp;nbsp;&lt;span style=&quot;text-align: center; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;GET /feed?cursor={cursor}&amp;amp;limit={limit} -&amp;gt; Post[]&lt;/span&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-330" y="762" width="526" height="286" as="geometry" />
        </mxCell>
        <mxCell id="sS5vmSUBj571SvYDJTSG-11" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="sS5vmSUBj571SvYDJTSG-9" target="sS5vmSUBj571SvYDJTSG-10">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="sS5vmSUBj571SvYDJTSG-47" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=1;entryDx=0;entryDy=0;entryPerimeter=0;curved=1;" edge="1" parent="1" source="sS5vmSUBj571SvYDJTSG-9" target="sS5vmSUBj571SvYDJTSG-14">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="1142.4285714285716" y="869" as="targetPoint" />
            <Array as="points">
              <mxPoint x="463" y="1159" />
              <mxPoint x="1712" y="1159" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="sS5vmSUBj571SvYDJTSG-48" value="multi-part upload: api provided by S3&lt;div&gt;chunking is happening on a client&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;will use PUT using pre-signed urls&lt;/div&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="sS5vmSUBj571SvYDJTSG-47">
          <mxGeometry x="0.036" y="3" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="sS5vmSUBj571SvYDJTSG-9" value="Client" style="ellipse;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="403" y="434" width="120" height="80" as="geometry" />
        </mxCell>
        <mxCell id="sS5vmSUBj571SvYDJTSG-17" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;startArrow=classic;startFill=1;" edge="1" parent="1" source="sS5vmSUBj571SvYDJTSG-10" target="sS5vmSUBj571SvYDJTSG-12">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="sS5vmSUBj571SvYDJTSG-18" value="&lt;span style=&quot;font-size: 12px;&quot;&gt;POST /posts -&amp;gt; postId&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;div&gt;{&lt;/div&gt;&lt;div&gt;&quot;media&quot;: {photo or video bytes},&lt;/div&gt;&lt;div&gt;&quot;description&quot;: &quot;dummy text&quot;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;text-align: center;&quot;&gt;GET /feed?cursor={cursor}&amp;amp;limit={limit} -&amp;gt; Post[]&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;" style="edgeLabel;html=1;align=left;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="sS5vmSUBj571SvYDJTSG-17">
          <mxGeometry x="-0.3799" y="1" relative="1" as="geometry">
            <mxPoint x="-49" y="16" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="sS5vmSUBj571SvYDJTSG-22" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;startArrow=classic;startFill=1;" edge="1" parent="1" source="sS5vmSUBj571SvYDJTSG-10" target="sS5vmSUBj571SvYDJTSG-20">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="sS5vmSUBj571SvYDJTSG-25" value="&lt;div style=&quot;font-size: 12px;&quot;&gt;&amp;nbsp;POST /follows&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&quot;followedId: &quot;123&quot;&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;}&lt;/div&gt;" style="edgeLabel;html=1;align=left;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="sS5vmSUBj571SvYDJTSG-22">
          <mxGeometry x="0.3013" y="1" relative="1" as="geometry">
            <mxPoint x="-50" y="10" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="sS5vmSUBj571SvYDJTSG-34" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;curved=1;" edge="1" parent="1" source="sS5vmSUBj571SvYDJTSG-12" target="sS5vmSUBj571SvYDJTSG-33">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="874" y="504" />
              <mxPoint x="874" y="847" />
              <mxPoint x="872" y="847" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="sS5vmSUBj571SvYDJTSG-43" value="background async process" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="sS5vmSUBj571SvYDJTSG-34">
          <mxGeometry x="0.5244" y="-1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="sS5vmSUBj571SvYDJTSG-10" value="API Gateway&lt;div&gt;- Routing&lt;/div&gt;&lt;div&gt;- Rate Limiting&lt;/div&gt;&lt;div&gt;- Authentication&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="604" y="329" width="120" height="290" as="geometry" />
        </mxCell>
        <mxCell id="sS5vmSUBj571SvYDJTSG-12" value="Post Service" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="963" y="444" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="sS5vmSUBj571SvYDJTSG-13" value="Postgres" style="shape=cylinder3;whiteSpace=wrap;html=1;boundedLbl=1;backgroundOutline=1;size=15;" vertex="1" parent="1">
          <mxGeometry x="1262" y="324" width="94" height="80" as="geometry" />
        </mxCell>
        <mxCell id="sS5vmSUBj571SvYDJTSG-14" value="S3 Blob Storage" style="shape=cylinder3;whiteSpace=wrap;html=1;boundedLbl=1;backgroundOutline=1;size=15;" vertex="1" parent="1">
          <mxGeometry x="1665" y="681" width="94" height="80" as="geometry" />
        </mxCell>
        <mxCell id="sS5vmSUBj571SvYDJTSG-15" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;entryPerimeter=0;startArrow=classic;startFill=1;" edge="1" parent="1" source="sS5vmSUBj571SvYDJTSG-12" target="sS5vmSUBj571SvYDJTSG-13">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="sS5vmSUBj571SvYDJTSG-16" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;entryPerimeter=0;startArrow=classic;startFill=1;" edge="1" parent="1" source="sS5vmSUBj571SvYDJTSG-12" target="sS5vmSUBj571SvYDJTSG-14">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="sS5vmSUBj571SvYDJTSG-49" value="request pre-signed urls" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="sS5vmSUBj571SvYDJTSG-16">
          <mxGeometry x="0.0911" y="-1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <UserObject label="&lt;div style=&quot;forced-color-adjust: none; color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: nowrap; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;post {&lt;/div&gt;&lt;div style=&quot;forced-color-adjust: none; color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: nowrap; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;id: uuid,&lt;/div&gt;&lt;div style=&quot;forced-color-adjust: none; color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: nowrap; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;creator: uuid FK to user.id,&lt;/div&gt;&lt;div style=&quot;forced-color-adjust: none; color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: nowrap; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;link_S3,&lt;/div&gt;&lt;div style=&quot;forced-color-adjust: none; color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: nowrap; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;description: text,&lt;/div&gt;&lt;div style=&quot;forced-color-adjust: none; color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: nowrap; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;created_at: timestamp,&lt;/div&gt;&lt;div style=&quot;forced-color-adjust: none; color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: nowrap; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;status: uploading | uploaded&lt;/div&gt;&lt;div style=&quot;forced-color-adjust: none; color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: nowrap; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;}&lt;/div&gt;" link="&lt;div style=&quot;forced-color-adjust: none; color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: nowrap; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;Post{&lt;/div&gt;&lt;div style=&quot;forced-color-adjust: none; color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: nowrap; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;id: uuid,&lt;/div&gt;&lt;div style=&quot;forced-color-adjust: none; color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: nowrap; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;creator: uuid FK to user.id,&lt;/div&gt;&lt;div style=&quot;forced-color-adjust: none; color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: nowrap; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;link_S3,&lt;/div&gt;&lt;div style=&quot;forced-color-adjust: none; color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: nowrap; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;description: text,&lt;/div&gt;&lt;div style=&quot;forced-color-adjust: none; color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: nowrap; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;created_at: timestamp&lt;/div&gt;&lt;div style=&quot;forced-color-adjust: none; color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: nowrap; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;}&lt;/div&gt;" id="sS5vmSUBj571SvYDJTSG-19">
          <mxCell style="text;whiteSpace=wrap;html=1;" vertex="1" parent="1">
            <mxGeometry x="1304.002727272727" y="122.99636363636353" width="169" height="123" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="sS5vmSUBj571SvYDJTSG-20" value="Follow Service" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="963" y="228" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="sS5vmSUBj571SvYDJTSG-23" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;entryPerimeter=0;startArrow=classic;startFill=1;" edge="1" parent="1" source="sS5vmSUBj571SvYDJTSG-20" target="sS5vmSUBj571SvYDJTSG-13">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <UserObject label="&lt;div style=&quot;forced-color-adjust: none;&quot;&gt;Follow{&lt;/div&gt;&lt;div style=&quot;forced-color-adjust: none;&quot;&gt;follower_id: uuid&amp;nbsp;&lt;span style=&quot;forced-color-adjust: none; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;FK to user.id,&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;forced-color-adjust: none;&quot;&gt;followed_id: uuid FK to user.id,&lt;/div&gt;&lt;div style=&quot;forced-color-adjust: none;&quot;&gt;followed_at: timestamp&lt;/div&gt;&lt;div style=&quot;forced-color-adjust: none;&quot;&gt;}&lt;/div&gt;" link="&lt;div style=&quot;forced-color-adjust: none;&quot;&gt;Follow{&lt;/div&gt;&lt;div style=&quot;forced-color-adjust: none;&quot;&gt;follower_id: uuid&amp;nbsp;&lt;span style=&quot;forced-color-adjust: none; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;FK to user.id&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;forced-color-adjust: none;&quot;&gt;followed_id: uuid FK to user.id&lt;/div&gt;&lt;div style=&quot;forced-color-adjust: none;&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;forced-color-adjust: none;&quot;&gt;&lt;br style=&quot;forced-color-adjust: none; color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: nowrap; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;&lt;/div&gt;" id="sS5vmSUBj571SvYDJTSG-26">
          <mxCell style="text;whiteSpace=wrap;html=1;" vertex="1" parent="1">
            <mxGeometry x="1473" y="137.49666666666673" width="188" height="94" as="geometry" />
          </mxCell>
        </UserObject>
        <mxCell id="sS5vmSUBj571SvYDJTSG-28" value="Function Requirement #3 - Get Chronological Order Posts (Fan-Out on Read)&lt;div&gt;1. Get Followees: using user.id which is taken from a JWT token&lt;/div&gt;&lt;div&gt;2. Get Posts:&amp;nbsp;For each of those followed users, query the Post table to get their recent posts.&lt;/div&gt;&lt;div&gt;3.&amp;nbsp;Merge and Sort: Combine all the retrieved posts and sort them chronologically (by timestamp or postId).&lt;/div&gt;&lt;div&gt;4.&amp;nbsp;Return: Return the sorted posts to the client.&lt;br&gt;&lt;br&gt;Note that these queries would be incredibly slow if we needed to look through every single Followers row for every user and then search through every Post row to find the ones we want.&amp;nbsp;&lt;/div&gt;&lt;div&gt;To avoid these full table scans, we can add a few indexes to our database.&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="653" y="904" width="1006" height="127" as="geometry" />
        </mxCell>
        <mxCell id="sS5vmSUBj571SvYDJTSG-29" value="4. Deep Dives" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=#666666;fillColor=#f5f5f5;fontColor=#333333;" vertex="1" parent="1">
          <mxGeometry x="1807" y="8" width="93" height="26" as="geometry" />
        </mxCell>
        <mxCell id="sS5vmSUBj571SvYDJTSG-30" value="1. The system should deliver feed content with low latency (&amp;lt; 500ms)&lt;div&gt;- Bad Approach: Simple Caching (Improving Fan-Out on Read)&lt;/div&gt;&lt;div&gt;- Good Solution: Precompute Feeds (Fan-Out on Write)&lt;br&gt;&lt;br&gt;A much better approach is to precompute the feeds. Instead of generating the feed when the user requests it (fan-out on read),&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;b&gt;we generate it when a user posts&lt;/b&gt; (fan-out on write).&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;- Great Solution: Hybrid Approach - Fan-Out on Read for celebrities, Fan-Out on Write for the rest users&lt;/div&gt;&lt;div&gt;For celebrities we need to define a threshold (&amp;lt;100k followers)&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="1807" y="77" width="693" height="142" as="geometry" />
        </mxCell>
        <mxCell id="sS5vmSUBj571SvYDJTSG-40" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;startArrow=classic;startFill=1;" edge="1" parent="1" source="sS5vmSUBj571SvYDJTSG-31" target="sS5vmSUBj571SvYDJTSG-12">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="sS5vmSUBj571SvYDJTSG-45" value="get" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="sS5vmSUBj571SvYDJTSG-40">
          <mxGeometry x="0.042" y="-1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="sS5vmSUBj571SvYDJTSG-31" value="Precomputed&lt;div&gt;Feed Cache&lt;/div&gt;&lt;div&gt;(Redis)&lt;/div&gt;" style="ellipse;whiteSpace=wrap;html=1;aspect=fixed;" vertex="1" parent="1">
          <mxGeometry x="1004" y="551" width="108" height="108" as="geometry" />
        </mxCell>
        <mxCell id="sS5vmSUBj571SvYDJTSG-38" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="sS5vmSUBj571SvYDJTSG-33" target="sS5vmSUBj571SvYDJTSG-37">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="sS5vmSUBj571SvYDJTSG-33" value="Message Queue -&amp;nbsp;&lt;div&gt;store new postId&lt;/div&gt;" style="shape=parallelogram;perimeter=parallelogramPerimeter;whiteSpace=wrap;html=1;fixedSize=1;" vertex="1" parent="1">
          <mxGeometry x="789" y="824" width="166" height="46" as="geometry" />
        </mxCell>
        <mxCell id="sS5vmSUBj571SvYDJTSG-36" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;" edge="1" parent="1" source="sS5vmSUBj571SvYDJTSG-31" target="sS5vmSUBj571SvYDJTSG-31">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="sS5vmSUBj571SvYDJTSG-39" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" edge="1" parent="1" source="sS5vmSUBj571SvYDJTSG-37" target="sS5vmSUBj571SvYDJTSG-31">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="sS5vmSUBj571SvYDJTSG-44" value="write" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="sS5vmSUBj571SvYDJTSG-39">
          <mxGeometry x="-0.1899" y="3" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="sS5vmSUBj571SvYDJTSG-37" value="Feed Fan-Out on Write&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Service&lt;/span&gt;" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="998" y="817" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="sS5vmSUBj571SvYDJTSG-41" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=1;entryDx=0;entryDy=0;entryPerimeter=0;curved=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" edge="1" parent="1" source="sS5vmSUBj571SvYDJTSG-37" target="sS5vmSUBj571SvYDJTSG-13">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="1144" y="847" as="sourcePoint" />
            <Array as="points">
              <mxPoint x="1482" y="847" />
              <mxPoint x="1482" y="404" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="sS5vmSUBj571SvYDJTSG-42" value="user_id: post[]&lt;div&gt;- post_id: no consistency&lt;/div&gt;&lt;div&gt;issues - will retrieve data from posts&lt;/div&gt;&lt;div&gt;- post_metadata (no need for a post lookup in a db)&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;store:&lt;/div&gt;&lt;div&gt;1. SORTED_SET: user_id: post_id&lt;/div&gt;&lt;div&gt;2. post_id: post_data&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="1112" y="634" width="291" height="127" as="geometry" />
        </mxCell>
        <mxCell id="sS5vmSUBj571SvYDJTSG-46" value="10mb limit on a payload" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="591.5" y="296" width="145" height="26" as="geometry" />
        </mxCell>
        <mxCell id="sS5vmSUBj571SvYDJTSG-52" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;exitPerimeter=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;entryPerimeter=0;curved=1;" edge="1" parent="1" source="sS5vmSUBj571SvYDJTSG-14" target="sS5vmSUBj571SvYDJTSG-13">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="sS5vmSUBj571SvYDJTSG-53" value="S3 Notification will be sent once the upload is done" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="sS5vmSUBj571SvYDJTSG-52">
          <mxGeometry x="0.3588" y="39" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="K2iyZU-mgYxE8OzBVc8b" name="dropbox">
    <mxGraphModel dx="2658" dy="1827" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="0" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="KVpP0q9FYTWia2P56D5a-1" value="1. Requirements" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=#666666;fillColor=#f5f5f5;fontColor=#333333;" vertex="1" parent="1">
          <mxGeometry x="-398" y="-67" width="106" height="26" as="geometry" />
        </mxCell>
        <mxCell id="y2MaV5HW_tRgavGTKklM-1" value="2. Core Entities" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=#666666;fillColor=#f5f5f5;fontColor=#333333;" vertex="1" parent="1">
          <mxGeometry x="-398" y="310" width="100" height="26" as="geometry" />
        </mxCell>
        <mxCell id="y2MaV5HW_tRgavGTKklM-2" value="Dropbox - a cloud-based file storage service that allows users to store and share files.&amp;nbsp;&lt;div&gt;It provides a secure and reliable way to store and access files from anywhere, on any device.&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-398" y="-213" width="512" height="41" as="geometry" />
        </mxCell>
        <mxCell id="y2MaV5HW_tRgavGTKklM-3" value="&lt;div&gt;Functional Requirements:&lt;/div&gt;- upload a file&lt;div&gt;- download a file&lt;/div&gt;&lt;div&gt;- automatically sync files across devices&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;out of scope (design s3 system design question):&lt;/div&gt;&lt;div&gt;- roll own blob storage&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-398" y="-36" width="278" height="113" as="geometry" />
        </mxCell>
        <mxCell id="SIlXdfyfoEO5nfVL8pr4-1" value="&lt;div style=&quot;&quot;&gt;Non-Functional Requirements:&lt;/div&gt;&lt;span style=&quot;&quot;&gt;- highly availably system (guarantees 99.9 availability), eventual consistency is fine&amp;nbsp;&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;&quot;&gt;(CAP theory, availability &amp;gt;&amp;gt; consistency)&lt;/span&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;&quot;&gt;- low latency uploads and downloads (as low as possible)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;&quot;&gt;- support large files (up to 50GB)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;- resumable uploads&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- high data integrity (sync accuracy)&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-398" y="175" width="461" height="113" as="geometry" />
        </mxCell>
        <mxCell id="TfKhY5ZJO2jo3Etm7knv-1" value="Scale:&lt;div&gt;- 100M DAU&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-398" y="103" width="84" height="41" as="geometry" />
        </mxCell>
        <mxCell id="6OWQNImDuv8s8JGWCn0P-2" value="- File (raw bytes)&lt;div&gt;- File Metadata&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;name, id, size, etc&lt;br&gt;&lt;/div&gt;&lt;div&gt;- User&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-398" y="349" width="141" height="70" as="geometry" />
        </mxCell>
        <mxCell id="6OWQNImDuv8s8JGWCn0P-3" value="3. API" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=#666666;fillColor=#f5f5f5;fontColor=#333333;" vertex="1" parent="1">
          <mxGeometry x="-398" y="439" width="50" height="26" as="geometry" />
        </mxCell>
        <mxCell id="6OWQNImDuv8s8JGWCn0P-4" value="&lt;div&gt;upload a file:&lt;/div&gt;POST /files -&amp;gt; 201&lt;div&gt;requestBody:&amp;nbsp;&lt;/div&gt;&lt;div&gt;{&lt;/div&gt;&lt;div&gt;File file,&lt;/div&gt;&lt;div&gt;FileMetadata fileMetadata&lt;/div&gt;&lt;div&gt;}&lt;br&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;download a file:&lt;/div&gt;&lt;div&gt;GET /files/{fileId} -&amp;gt; {File &amp;amp; FileMetadata} 200 status code&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;sync:&lt;/div&gt;&lt;div&gt;GET /changes?since={timestamp} -&amp;gt; fileIds[]&lt;/div&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-398" y="482" width="324" height="199" as="geometry" />
        </mxCell>
        <mxCell id="IjiKB-747pUPl7-p9aJl-1" value="userId will be present in the request via the header&lt;div&gt;via either session token or JWT&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-398" y="702" width="287" height="41" as="geometry" />
        </mxCell>
        <mxCell id="IjiKB-747pUPl7-p9aJl-5" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;startArrow=classic;startFill=1;" edge="1" parent="1" source="etjfxlxJYTYRdtBJyq4H-3" target="etjfxlxJYTYRdtBJyq4H-4">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="380" y="444" as="sourcePoint" />
            <mxPoint x="458" y="443.9999999999998" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="etjfxlxJYTYRdtBJyq4H-1" value="File Service" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="720" y="306.5" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="etjfxlxJYTYRdtBJyq4H-16" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;entryPerimeter=0;curved=1;" edge="1" parent="1" source="etjfxlxJYTYRdtBJyq4H-3" target="etjfxlxJYTYRdtBJyq4H-7">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="891.4615384615386" y="-20.923076923076906" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="etjfxlxJYTYRdtBJyq4H-17" value="download directly from S3 using S3 link&lt;div&gt;- upload directly to S3 with a pre-signed url&lt;/div&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="etjfxlxJYTYRdtBJyq4H-16">
          <mxGeometry x="0.1321" y="-1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="etjfxlxJYTYRdtBJyq4H-3" value="" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="240" y="345.5" width="114" height="197" as="geometry" />
        </mxCell>
        <mxCell id="etjfxlxJYTYRdtBJyq4H-5" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="etjfxlxJYTYRdtBJyq4H-4" target="etjfxlxJYTYRdtBJyq4H-1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="etjfxlxJYTYRdtBJyq4H-6" value="upload(fileMetadata)&lt;div&gt;getFile(fileId)&lt;/div&gt;" style="edgeLabel;html=1;align=left;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="etjfxlxJYTYRdtBJyq4H-5">
          <mxGeometry x="0.0329" y="4" relative="1" as="geometry">
            <mxPoint x="-40" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="etjfxlxJYTYRdtBJyq4H-22" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;startArrow=classic;startFill=1;" edge="1" parent="1" source="etjfxlxJYTYRdtBJyq4H-4" target="etjfxlxJYTYRdtBJyq4H-21">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="etjfxlxJYTYRdtBJyq4H-23" value="getChanges()" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="etjfxlxJYTYRdtBJyq4H-22">
          <mxGeometry x="-0.0565" y="-2" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="etjfxlxJYTYRdtBJyq4H-4" value="Load Balancer &amp;amp;&amp;nbsp;&lt;div&gt;API Gateway&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;- routing&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;- authentication&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;- rate limiting&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;- SSL termination&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="460" y="306.5" width="111" height="275" as="geometry" />
        </mxCell>
        <mxCell id="OvEh-RvhsHhTRr3o7u3M-1" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;exitPerimeter=0;entryX=1;entryY=0.5;entryDx=0;entryDy=0;curved=1;" edge="1" parent="1" source="etjfxlxJYTYRdtBJyq4H-7" target="etjfxlxJYTYRdtBJyq4H-1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="OvEh-RvhsHhTRr3o7u3M-2" value="S3 notification event" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="OvEh-RvhsHhTRr3o7u3M-1">
          <mxGeometry x="0.1368" y="-13" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="etjfxlxJYTYRdtBJyq4H-7" value="S3 (blob storage)" style="shape=cylinder3;whiteSpace=wrap;html=1;boundedLbl=1;backgroundOutline=1;size=15;" vertex="1" parent="1">
          <mxGeometry x="910" y="153" width="115" height="109" as="geometry" />
        </mxCell>
        <mxCell id="etjfxlxJYTYRdtBJyq4H-8" value="Postgres/MySql" style="shape=cylinder3;whiteSpace=wrap;html=1;boundedLbl=1;backgroundOutline=1;size=15;" vertex="1" parent="1">
          <mxGeometry x="910" y="365" width="115" height="109" as="geometry" />
        </mxCell>
        <mxCell id="etjfxlxJYTYRdtBJyq4H-9" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;entryPerimeter=0;startArrow=classic;startFill=1;" edge="1" parent="1" source="etjfxlxJYTYRdtBJyq4H-1" target="etjfxlxJYTYRdtBJyq4H-7">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="etjfxlxJYTYRdtBJyq4H-10" value="&lt;strike&gt;upload file&lt;/strike&gt;&lt;div&gt;&lt;strike&gt;returns: file link&lt;/strike&gt;&lt;/div&gt;&lt;div&gt;request a pre-sign url&lt;/div&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="etjfxlxJYTYRdtBJyq4H-9">
          <mxGeometry x="-0.1648" y="1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="etjfxlxJYTYRdtBJyq4H-11" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="1" source="etjfxlxJYTYRdtBJyq4H-1" target="etjfxlxJYTYRdtBJyq4H-8">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="etjfxlxJYTYRdtBJyq4H-13" value="write fileMetadata" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="etjfxlxJYTYRdtBJyq4H-11">
          <mxGeometry x="-0.1331" y="-3" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="etjfxlxJYTYRdtBJyq4H-14" value="file_metadata&lt;div&gt;- id unique PK: uuid,&lt;/div&gt;&lt;div&gt;- name: text,&lt;/div&gt;&lt;div&gt;- type: enum,&lt;/div&gt;&lt;div&gt;- size: number (in bytes),&lt;/div&gt;&lt;div&gt;- owner_id FK: uuid,&lt;/div&gt;&lt;div&gt;- s3_link,&lt;/div&gt;&lt;div&gt;- creation_date: timestamp,&lt;/div&gt;&lt;div&gt;- last_update_date: timestamp,&lt;/div&gt;&lt;div&gt;- status: started | uploaded&lt;/div&gt;&lt;div&gt;- ...metadata&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="1042" y="326" width="183" height="170" as="geometry" />
        </mxCell>
        <mxCell id="etjfxlxJYTYRdtBJyq4H-15" value="Storing the raw bytes of the files&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;S3: multi-part upload&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="1021" y="128" width="189" height="55" as="geometry" />
        </mxCell>
        <mxCell id="etjfxlxJYTYRdtBJyq4H-18" value="Local Folder" style="rounded=1;whiteSpace=wrap;html=1;arcSize=33;" vertex="1" parent="1">
          <mxGeometry x="255" y="499" width="82.5" height="33" as="geometry" />
        </mxCell>
        <mxCell id="etjfxlxJYTYRdtBJyq4H-19" value="Client App&lt;div&gt;responsible for syncing local folder and S3&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="248" y="352" width="98" height="96" as="geometry" />
        </mxCell>
        <mxCell id="etjfxlxJYTYRdtBJyq4H-20" value="1. Remote Changed&lt;div&gt;- pull for changes&lt;/div&gt;&lt;div&gt;- download the new file and replace&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;2. Local Changed&lt;/div&gt;&lt;div&gt;- upload the changed file to Remote&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212));&quot;&gt;use OS APIs to detect any changes:&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212));&quot;&gt;Windows API:&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;span style=&quot;background-color: rgb(213, 232, 212);&quot;&gt;- &lt;/span&gt;&lt;span style=&quot;background-color: rgb(213, 232, 212);&quot;&gt;FileSystemWatcher&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: light-dark(#ffffff, var(--ge-dark-color, #121212));&quot;&gt;Mac OS API:&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(213, 232, 212);&quot;&gt;&lt;b&gt;- FSEvents&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="2" y="352" width="210" height="199" as="geometry" />
        </mxCell>
        <mxCell id="etjfxlxJYTYRdtBJyq4H-21" value="Sync Service" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="728" y="472" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="etjfxlxJYTYRdtBJyq4H-24" value="Local DB" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="256.5" y="453" width="81" height="41" as="geometry" />
        </mxCell>
        <mxCell id="XV3mMw1V0_ARTCzaIgFa-1" value="Upload large files: 50 GB issues:&lt;div&gt;1. uploading to the file service, then to S3 storage is redundant, it&#39;s a loss of bandwidth&lt;/div&gt;&lt;div&gt;2. we cannot upload through api gateway using http - there&#39;s a limit of 10MB&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;50GB @ 100mbps = 1h 12m&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;steps:&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;1. Chunk files on a client to 5MB chunks&lt;/div&gt;&lt;div&gt;for 50GB = 50000MB / 5 MB = 10000 chunks&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b style=&quot;background-color: rgb(213, 232, 212);&quot;&gt;2. Fingerprint&lt;/b&gt; each chunk: hash(bytes)&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="212" y="627" width="478" height="185" as="geometry" />
        </mxCell>
        <mxCell id="80WttukKXqSlOcVC4WzP-1" value="chunk&lt;div&gt;- id unique PK: uuid,&lt;/div&gt;&lt;div&gt;- file_metadata_id FK: uuid,&lt;/div&gt;&lt;div&gt;- status: enum,&lt;/div&gt;&lt;div&gt;- s3_link&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="1225" y="312" width="165" height="84" as="geometry" />
        </mxCell>
        <mxCell id="tp2BqbJwHo-3h123wJ1V-1" value="Deep Dives:&lt;div&gt;1.Upload directly to S3 blob storage with pre-signed urls (request pre-signed urls through File Service)&lt;/div&gt;&lt;div&gt;2. How do we update the chunk status?&amp;nbsp;&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;- approach #1 - insecure: upload a chunk, receive a response that chunk is uploaded, and then relying on a client make an additional&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;request to the client with the chunk_id, status: uploaded to update the file_metadata. The issue with this approach that we&#39;re directly relying/trusting&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;our client, and the client could lie to us (a malicious user could send a wrong status which will create an inconsistency between s3 status/chunk status)&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;- approach #2 - use a pattern &quot;Trust but Verify&quot;: before updating file_metadata, we need to make an additional request to S3 storage to verify that the chunk&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;is uploaded.&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;- approach #3 - use S3 notifications. S3 notification event will be triggered once a chunk is uploaded and update the status directly in file_metadata&lt;br&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="784" y="561" width="869" height="142" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="el7KaRuGNUAxwscP_oVZ" name="distributed cache">
    <mxGraphModel dx="3394" dy="1028" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="0" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="pH6rQ80bZqoXR_GMyfaJ-1" value="&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-800" y="166" width="18" height="26" as="geometry" />
        </mxCell>
        <mxCell id="pH6rQ80bZqoXR_GMyfaJ-2" value="What is a Distributed Cache?&#xa;A distributed cache is a system that stores data as key-value pairs in memory across multiple machines in a network. &#xa;Unlike single-node caches that are limited by the resources of one machine, distributed caches scale horizontally across many nodes to handle massive workloads. &#xa;The cache cluster works together to partition and replicate data, ensuring high availability and fault tolerance when individual nodes fail.&#xa;&#xa;https://www.hellointerview.com/learn/system-design/problem-breakdowns/distributed-cache" style="text;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontStyle=0" vertex="1" parent="1">
          <mxGeometry x="-1493" y="-3" width="888" height="98" as="geometry" />
        </mxCell>
        <mxCell id="pH6rQ80bZqoXR_GMyfaJ-3" value="1. Requirements" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=#666666;fillColor=#f5f5f5;fontColor=#333333;" vertex="1" parent="1">
          <mxGeometry x="-1493" y="128" width="106" height="26" as="geometry" />
        </mxCell>
        <mxCell id="hZOInK8lkXoX4SPYT6mo-1" value="Functional Requirements:&lt;div&gt;&lt;div&gt;- Users should be able to &lt;b&gt;set&lt;/b&gt;, &lt;b&gt;get&lt;/b&gt;, and &lt;b&gt;delete&lt;/b&gt; key-value pairs.&lt;/div&gt;&lt;div&gt;- Users should be able to configure the expiration time for key-value pairs.&lt;/div&gt;&lt;div&gt;- Data should be evicted according to Least Recently Used (LRU) policy.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Below the line (out of scope)&lt;/div&gt;&lt;div&gt;- Users should be able to configure the cache size.&lt;/div&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-1490" y="163" width="410" height="113" as="geometry" />
        </mxCell>
        <mxCell id="hZOInK8lkXoX4SPYT6mo-2" value="Eviction Policies:&lt;div&gt;&lt;br&gt;&lt;div&gt;Time-based:&lt;/div&gt;&lt;div&gt;- TTL (Time To Live)&lt;/div&gt;&lt;div&gt;Size-based:&lt;/div&gt;&lt;div&gt;- LRU (least recently used)&lt;/div&gt;&lt;div&gt;- LFU (least frequently used)&lt;/div&gt;&lt;div&gt;- FIFO (first in first out)&lt;/div&gt;&lt;div&gt;- LRFU (least frequently &amp;amp; recently used)&lt;/div&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-1493" y="276" width="235" height="142" as="geometry" />
        </mxCell>
        <mxCell id="Subwh6OflqbcaBSKDEaU-1" value="Non-Functional Requirements:&lt;div&gt;-&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;The system should be highly available. Eventual consistency is acceptable.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;- The system should support low latency operations (&amp;lt; 10ms for get and set requests).&lt;/div&gt;&lt;div&gt;- The system should be scalable to support the expected 1TB of data and 100k requests per second.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;Below the line (out of scope)&lt;/div&gt;&lt;div&gt;- Durability (data persistence across restarts)&lt;/div&gt;&lt;div&gt;- Strong consistency guarantees&lt;/div&gt;&lt;div&gt;- Complex querying capabilities&lt;/div&gt;&lt;div&gt;- Transaction support&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;Scale: store up to &lt;b&gt;1TB&lt;/b&gt; of data and expect to handle a peak of up to &lt;b&gt;100k requests per second&lt;/b&gt;.&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-1493" y="460" width="552" height="199" as="geometry" />
        </mxCell>
        <mxCell id="sCC1xh2GsP5VZtGUOOFr-1" value="2. Core Entities" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=#666666;fillColor=#f5f5f5;fontColor=#333333;" vertex="1" parent="1">
          <mxGeometry x="-1490" y="693" width="100" height="26" as="geometry" />
        </mxCell>
        <mxCell id="K1CxeyfUa0m13JQ_6Pck-1" value="- Key&lt;div&gt;- Value&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-1490" y="724" width="55" height="41" as="geometry" />
        </mxCell>
        <mxCell id="K1CxeyfUa0m13JQ_6Pck-2" value="3. API" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=#666666;fillColor=#f5f5f5;fontColor=#333333;" vertex="1" parent="1">
          <mxGeometry x="-1487.5" y="779" width="50" height="26" as="geometry" />
        </mxCell>
        <mxCell id="Q7qzO_BLJ7WN3gepMy-6-1" value="set a key:&lt;div&gt;&lt;br&gt;&lt;div&gt;POST /keys/{key}&lt;/div&gt;&lt;div&gt;requestBody:&lt;/div&gt;&lt;div&gt;{&quot;value&quot;: ...}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;get a key:&lt;/div&gt;&lt;div&gt;GET /keys/{key} -&amp;gt; {&quot;value&quot;: ...}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;delete a key-value pair&lt;/div&gt;&lt;div&gt;DELETE /keys/{key}&lt;/div&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-1487.5" y="832" width="183" height="170" as="geometry" />
        </mxCell>
        <mxCell id="Q7qzO_BLJ7WN3gepMy-6-2" value="Class Cache {&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// #1 Version - Users should be able to&amp;nbsp;&lt;b&gt;set&lt;/b&gt;,&amp;nbsp;&lt;b&gt;get&lt;/b&gt;, and&amp;nbsp;&lt;b&gt;delete&lt;/b&gt;&amp;nbsp;key-value pairs.&lt;br&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// 3 operations, all O(1).&amp;nbsp;The hash table handles collision resolution and dynamic resizing for us.&lt;br&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;private Map&amp;lt;String, String&amp;gt; data;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;public Cache() {&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;this.data = new HashMap&amp;lt;&amp;gt;();&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;private void set(String key, String value) {&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;this.data.put(key, value);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;private String get(String key) {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;return this.data.containsKey(key) ?&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;this.data.get(key) : &quot;&quot;;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;private boolean delete(String key) {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;if (this.data.containsKey(key)) return false;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;this.data.remove(key);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;return true;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;}&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-1290" y="660" width="552" height="401" as="geometry" />
        </mxCell>
        <mxCell id="Q7qzO_BLJ7WN3gepMy-6-16" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="Q7qzO_BLJ7WN3gepMy-6-3" target="Q7qzO_BLJ7WN3gepMy-6-14">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Q7qzO_BLJ7WN3gepMy-6-3" value="Client" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-699" y="286" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="Q7qzO_BLJ7WN3gepMy-6-6" value="Class Cache {&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// #2 Version - Users should be able to configure the expiration time for key-value pairs&lt;br&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// 3 operations, all O(1).&amp;nbsp;The hash table handles collision resolution and dynamic resizing for us.&lt;br&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;private Map&amp;lt;String, Node&amp;gt; data;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;class Node {&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;private String value;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;private Timestamp expirationDate;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;public Node(String value, Timestamp expirationDate) {&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;text-wrap-mode: nowrap;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;this.value = value;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;white-space-collapse: preserve;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;this.expirationDate = expirationDate;&lt;br&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;}&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;public Cache() {&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;this.data = new HashMap&amp;lt;&amp;gt;();&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;The set() method takes an optional TTL parameter and calculates the expiry timestamp&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;public void set(String key, String value, Timestamp ttl) {&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;Timestamp expiryTime = curTime + ttl;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;this.data.put(key, new Node(value, expiryTime);&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;//&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;The get() method checks if the entry has expired before returning it&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;public String get(String key) {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;return this.data.containsKey(key) ?&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;this.data.get(key) : &quot;&quot;;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;public boolean delete(String key) {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;if (this.data.containsKey(key)) return false;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;this.data.remove(key);&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;return true;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;}&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;color: rgb(99, 177, 117); font-family: &amp;quot;Source Code Pro&amp;quot;, Consolas, &amp;quot;Bitstream Vera Sans Mono&amp;quot;, &amp;quot;Courier New&amp;quot;, Courier, monospace; font-size: 14px; white-space: pre-wrap; background-color: rgb(248, 248, 248);&quot;&gt;@Scheduled&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;public void cleanUp() { // it could be a cron job&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;for (Map.Entry&amp;lt;String, Node&amp;gt; entry: data.entrySet()) {&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;if (entry.getValue().expirationTime &amp;gt; curTime) delete(entry.getKey());&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;}&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;}&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;div&gt;This handles the basic TTL functionality, but there&#39;s a problem: expired keys only get cleaned up when they&#39;re accessed.&lt;br&gt;This means our cache could fill up with expired entries that nobody is requesting anymore.&lt;/div&gt;&lt;div&gt;To fix this, we need a background process (often called a &quot;janitor&quot;) that periodically scans for and removes expired entries:&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-688" y="660" width="666" height="792" as="geometry" />
        </mxCell>
        <mxCell id="Q7qzO_BLJ7WN3gepMy-6-14" value="Cache Service&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=center;" vertex="1" parent="1">
          <mxGeometry x="-499" y="192" width="266" height="248" as="geometry" />
        </mxCell>
        <mxCell id="Q7qzO_BLJ7WN3gepMy-6-4" value="&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;HashMap&amp;lt;&amp;gt;&lt;/span&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;table style=&quot;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;Key1&lt;/td&gt;&lt;td&gt;Value1&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Key2&lt;/td&gt;&lt;td&gt;Value2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Key3&lt;/td&gt;&lt;td&gt;Value3&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-458.5" y="225.5" width="185" height="115" as="geometry" />
        </mxCell>
        <mxCell id="Q7qzO_BLJ7WN3gepMy-6-17" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" edge="1" parent="1" source="Q7qzO_BLJ7WN3gepMy-6-7" target="Q7qzO_BLJ7WN3gepMy-6-4">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Q7qzO_BLJ7WN3gepMy-6-18" value="Runs every n minutes to cleanup&amp;nbsp;&lt;div&gt;expired key-value pair&lt;/div&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="Q7qzO_BLJ7WN3gepMy-6-17">
          <mxGeometry x="0.3405" y="-1" relative="1" as="geometry">
            <mxPoint x="-1" y="11" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Q7qzO_BLJ7WN3gepMy-6-7" value="Janitor" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-402" y="405" width="72" height="22" as="geometry" />
        </mxCell>
        <mxCell id="Q7qzO_BLJ7WN3gepMy-6-19" value="Class LRUCache {&lt;div&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;// #3 Version -&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Data should be evicted according to Least Recently Used (LRU) policy.&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;The solution is to combine two data structures:&lt;br&gt;A hash table for O(1) lookups - This gives us instant access to any item in the cache&lt;br&gt;A doubly linked list to track access order - This lets us maintain a perfect history of which items were used when&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;Java has a data structure - LinkedHashMap (or we can implement it manually using Node head, tail with next, prev pointers)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp; &amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;private int capacity;&lt;/span&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;private LinkedHashMap&amp;lt;Integer, Integer&amp;gt; dic;&lt;/span&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;public LRUCache(int capacity) {&lt;/span&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; this.capacity = capacity;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // LinkedHashMap(int initialCapacity, float loadFactor, boolean accessOrder)&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; dic = new LinkedHashMap&amp;lt;&amp;gt;(5, 0.75f, true) {&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; @Override&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; private boolean removeEldestEntry(Map.Entry&amp;lt;Integer, Integer&amp;gt; eldest) {&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return size() &amp;gt; capacity;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; };&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/blockquote&gt;&lt;br&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp; public int get(int key) {&lt;/span&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return dic.getOrDefault(key, -1);&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/span&gt;&lt;/blockquote&gt;&lt;br&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp; public void put(int key, int value) {&lt;/span&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; dic.put(key, value);&lt;/span&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-50" y="659" width="676" height="516" as="geometry" />
        </mxCell>
        <mxCell id="Q7qzO_BLJ7WN3gepMy-6-20" value="Deep Dives" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=#666666;fillColor=#f5f5f5;fontColor=#333333;" vertex="1" parent="1">
          <mxGeometry x="-1493" y="1167" width="80" height="26" as="geometry" />
        </mxCell>
        <mxCell id="Q7qzO_BLJ7WN3gepMy-6-21" value="&lt;b style=&quot;background-color: rgb(213, 232, 212);&quot;&gt;1.&amp;nbsp;How do we ensure our cache is highly available and fault tolerant?&lt;/b&gt;&lt;div&gt;The key challenge here is data replication - we need multiple copies of our data spread across different nodes.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;solutions:&lt;/div&gt;&lt;div&gt;- Bad: Synchronous Replication&lt;br&gt;The simplest approach is to maintain a few replicas of each shard. When a write comes in,&amp;nbsp;&lt;/div&gt;&lt;div&gt;we update all replicas synchronously and only respond once all replicas have acknowledged the write.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;- Good: Asynchronous Replication&lt;/div&gt;&lt;div&gt;Another option is to update one primary copy immediately and then propagate changes to replicas asynchronously&lt;/div&gt;&lt;div&gt;&amp;nbsp;-- confirming the write once only the primary has acknowledged the change.&amp;nbsp;&lt;/div&gt;&lt;div&gt;This aligns well with the eventual consistency model that most caches adopt (and is a non-functional requirement for us),&lt;/div&gt;&lt;div&gt;&amp;nbsp;making it more suitable for a cache with our requirements than synchronous replication.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;- Good: Peer-to-Peer Replication&lt;/b&gt;&lt;/div&gt;&lt;div&gt;In peer-to-peer replication, each node is equal and can accept both reads and writes.&amp;nbsp;&lt;/div&gt;&lt;div&gt;Changes are propagated to other nodes using &lt;b&gt;gossip protocols&lt;/b&gt;,&amp;nbsp;&lt;/div&gt;&lt;div&gt;where nodes periodically exchange information about their state with randomly selected peers.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b style=&quot;background-color: rgb(213, 232, 212);&quot;&gt;2.&amp;nbsp;How do we ensure our cache is scalable?&lt;/b&gt;&lt;/div&gt;&lt;div&gt;We can&#39;t fit 1TB of data efficiently on a single node without hitting memory and performance limits.&lt;/div&gt;&lt;div&gt;We need to split—or shard—our key-value pairs across multiple nodes.&lt;/div&gt;&lt;div&gt;If done well, each node will hold a manageable portion of the dataset, allowing us to scale horizontally by simply adding more machines.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;scale:&lt;/div&gt;&lt;div&gt;single node can handle up to 20.000 requests per second&lt;/div&gt;&lt;div&gt;100.000/20.000 = 5 shards (+ 3 buffer shards for traffic spikes and potential node failures) ~ 8 shards&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;for storage requirements:&lt;/div&gt;&lt;div&gt;typical AWS instance with 32RAM can use about 24GB&amp;nbsp;for cache data after accounting for system overhead.&lt;/div&gt;&lt;div&gt;1TB = 1024GB / 24GB ~ 43 nodes.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;the answer: we will need 50 nodes of the service + database (we go for a higher number)&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-1493" y="1212" width="739" height="487" as="geometry" />
        </mxCell>
        <mxCell id="Q7qzO_BLJ7WN3gepMy-6-26" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="Q7qzO_BLJ7WN3gepMy-6-22" target="Q7qzO_BLJ7WN3gepMy-6-24">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Q7qzO_BLJ7WN3gepMy-6-29" value="write to all&lt;div&gt;wait for all to confirm&lt;/div&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="Q7qzO_BLJ7WN3gepMy-6-26">
          <mxGeometry x="-0.283" y="3" relative="1" as="geometry">
            <mxPoint x="25" y="1" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Q7qzO_BLJ7WN3gepMy-6-27" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="Q7qzO_BLJ7WN3gepMy-6-22" target="Q7qzO_BLJ7WN3gepMy-6-23">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Q7qzO_BLJ7WN3gepMy-6-28" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="Q7qzO_BLJ7WN3gepMy-6-22" target="Q7qzO_BLJ7WN3gepMy-6-25">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Q7qzO_BLJ7WN3gepMy-6-22" value="Client" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-2197" y="1086" width="86" height="40" as="geometry" />
        </mxCell>
        <mxCell id="Q7qzO_BLJ7WN3gepMy-6-23" value="cache replica 1" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-1983" y="1030" width="91" height="33" as="geometry" />
        </mxCell>
        <mxCell id="Q7qzO_BLJ7WN3gepMy-6-24" value="cache replica 2" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-1980" y="1089.5" width="91" height="33" as="geometry" />
        </mxCell>
        <mxCell id="Q7qzO_BLJ7WN3gepMy-6-25" value="cache replica 3" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-1980" y="1148.5" width="91" height="33" as="geometry" />
        </mxCell>
        <mxCell id="Q7qzO_BLJ7WN3gepMy-6-34" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="Q7qzO_BLJ7WN3gepMy-6-30" target="Q7qzO_BLJ7WN3gepMy-6-33">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Q7qzO_BLJ7WN3gepMy-6-30" value="Client" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-2197" y="1274" width="86" height="40" as="geometry" />
        </mxCell>
        <mxCell id="Q7qzO_BLJ7WN3gepMy-6-31" value="cache replica 1" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-1978" y="1241" width="91" height="33" as="geometry" />
        </mxCell>
        <mxCell id="Q7qzO_BLJ7WN3gepMy-6-32" value="cache replica 2" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-1980" y="1314" width="91" height="33" as="geometry" />
        </mxCell>
        <mxCell id="Q7qzO_BLJ7WN3gepMy-6-35" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="Q7qzO_BLJ7WN3gepMy-6-33" target="Q7qzO_BLJ7WN3gepMy-6-31">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Q7qzO_BLJ7WN3gepMy-6-36" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="Q7qzO_BLJ7WN3gepMy-6-33" target="Q7qzO_BLJ7WN3gepMy-6-32">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Q7qzO_BLJ7WN3gepMy-6-33" value="Leader Cache" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-2082" y="1277.5" width="91" height="33" as="geometry" />
        </mxCell>
        <mxCell id="Q7qzO_BLJ7WN3gepMy-6-37" value="asynchronously propagate&lt;div&gt;changes&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;to replicas&lt;/span&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-1975" y="1273" width="159" height="41" as="geometry" />
        </mxCell>
        <mxCell id="Q7qzO_BLJ7WN3gepMy-6-44" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;dashed=1;" edge="1" parent="1" source="Q7qzO_BLJ7WN3gepMy-6-38" target="Q7qzO_BLJ7WN3gepMy-6-40">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Q7qzO_BLJ7WN3gepMy-6-45" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;dashed=1;" edge="1" parent="1" source="Q7qzO_BLJ7WN3gepMy-6-38" target="Q7qzO_BLJ7WN3gepMy-6-39">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Q7qzO_BLJ7WN3gepMy-6-46" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;dashed=1;" edge="1" parent="1" source="Q7qzO_BLJ7WN3gepMy-6-38" target="Q7qzO_BLJ7WN3gepMy-6-41">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Q7qzO_BLJ7WN3gepMy-6-38" value="Client" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-2169.5" y="1511" width="86" height="40" as="geometry" />
        </mxCell>
        <mxCell id="Q7qzO_BLJ7WN3gepMy-6-49" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;dashed=1;startArrow=classic;startFill=1;" edge="1" parent="1" source="Q7qzO_BLJ7WN3gepMy-6-39" target="Q7qzO_BLJ7WN3gepMy-6-40">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Q7qzO_BLJ7WN3gepMy-6-39" value="cache replica 1" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-2021.5" y="1457" width="91" height="33" as="geometry" />
        </mxCell>
        <mxCell id="Q7qzO_BLJ7WN3gepMy-6-50" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;dashed=1;startArrow=classic;startFill=1;" edge="1" parent="1" source="Q7qzO_BLJ7WN3gepMy-6-40" target="Q7qzO_BLJ7WN3gepMy-6-41">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="Q7qzO_BLJ7WN3gepMy-6-40" value="cache replica 2" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-2021.5" y="1514.5" width="91" height="33" as="geometry" />
        </mxCell>
        <mxCell id="Q7qzO_BLJ7WN3gepMy-6-41" value="cache replica 3" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-2021.5" y="1572" width="91" height="33" as="geometry" />
        </mxCell>
        <mxCell id="Q7qzO_BLJ7WN3gepMy-6-47" value="write to any of the nodes" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-2201" y="1568" width="149" height="26" as="geometry" />
        </mxCell>
        <mxCell id="Q7qzO_BLJ7WN3gepMy-6-48" value="propagate changes to other nodes" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-1930.5" y="1485" width="201" height="26" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="yTHowqVnXAIj-98l2Kkx" name="Local Delivery">
    <mxGraphModel dx="1929" dy="714" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="0" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="uZaY9qesb8EvW5n6evjB-2" value="&amp;gt; Gopuff delivers goods typically found in a convenience store via rapid delivery and 500+ micro-fulfillment centers." style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-212" y="191" width="628" height="26" as="geometry" />
        </mxCell>
        <mxCell id="uZaY9qesb8EvW5n6evjB-3" value="1. Requirements" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=#666666;fillColor=#f5f5f5;fontColor=#333333;" vertex="1" parent="1">
          <mxGeometry x="-212" y="237" width="106" height="26" as="geometry" />
        </mxCell>
        <mxCell id="uZaY9qesb8EvW5n6evjB-4" value="&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Functional Requirements:&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;1.&amp;nbsp;&lt;span style=&quot;background-color: transparent;&quot;&gt;Customers should be able to query availability of items, deliverable in 1 hour,&amp;nbsp;&lt;/span&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;by location (i.e. the effective availability is the union of all inventory nearby DCs (distribution center)).&lt;/span&gt;&lt;div style=&quot;&quot;&gt;2. Customers should be able to order multiple items at the same time.&lt;br&gt;&lt;br&gt;&lt;div&gt;Below the line (out of scope):&lt;/div&gt;&lt;div&gt;1. Handling payments/purchases.&lt;/div&gt;&lt;div&gt;2. Handling driver routing and deliveries.&lt;/div&gt;&lt;div&gt;3. Search functionality and catalog APIs. (The system is strictly concerned with availability and ordering).&lt;/div&gt;&lt;div&gt;4. Cancellations and returns.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Non-Functional Requirements:&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;1. Availability requests should fast (&amp;lt;100ms) to support use-cases like search.&lt;/div&gt;&lt;div&gt;2. Ordering should be strongly consistent: two customers should not be able to purchase the same physical product.&lt;/div&gt;&lt;div&gt;3. System should be able to support 10k DCs and 100k items in the catalog across DCs.&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;4. Order volume will be 10M orders/day&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;Below the line (out of scope):&lt;/div&gt;&lt;div&gt;1. Privacy and security.&lt;/div&gt;&lt;div&gt;2. Disaster recovery.&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-212" y="283" width="634" height="329" as="geometry" />
        </mxCell>
        <mxCell id="uZaY9qesb8EvW5n6evjB-5" value="2. Core Entities" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=#666666;fillColor=#f5f5f5;fontColor=#333333;" vertex="1" parent="1">
          <mxGeometry x="-209" y="645" width="100" height="26" as="geometry" />
        </mxCell>
        <mxCell id="uZaY9qesb8EvW5n6evjB-6" value="&lt;div&gt;user {...}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;item{&amp;nbsp;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;inventory { - Inventory entity is a physical item at a specific location.&lt;/div&gt;&lt;div&gt;id: uuid PK&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;distribution_center {&lt;br&gt;id: uuid PK,&lt;/div&gt;&lt;div&gt;name: text,&lt;/div&gt;&lt;div&gt;location: longitude/latitute&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;order&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div&gt;id: uuid PK,&lt;/div&gt;&lt;div&gt;created_at: timestamp&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;order_item&amp;nbsp;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div&gt;id: uuid PK,&lt;/div&gt;&lt;div&gt;order_id: uuid FK&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-209" y="697" width="376" height="358" as="geometry" />
        </mxCell>
        <mxCell id="uZaY9qesb8EvW5n6evjB-7" value="&lt;div&gt;&lt;b&gt;Inventory&lt;/b&gt;: A physical instance of an item, located at a DC.&amp;nbsp;&lt;/div&gt;&lt;div&gt;We&#39;ll sum up Inventory to determine the quantity available to a specific user for a specific Item.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Item&lt;/b&gt;: A type of item, e.g. Cheetos. These are what our customers will actually care about.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;DistributionCenter&lt;/b&gt;: A physical location where items are stored.&amp;nbsp;&lt;/div&gt;&lt;div&gt;We&#39;ll use these to determine which items are available to a user. Inventory are stored in DCs.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Order&lt;/b&gt;: A collection of Inventory which have been ordered by a user (and shipping/billing information).&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-786" y="697" width="554" height="142" as="geometry" />
        </mxCell>
        <mxCell id="uZaY9qesb8EvW5n6evjB-8" value="3. API" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=#666666;fillColor=#f5f5f5;fontColor=#333333;" vertex="1" parent="1">
          <mxGeometry x="-209" y="1083" width="50" height="26" as="geometry" />
        </mxCell>
        <mxCell id="uZaY9qesb8EvW5n6evjB-9" value="1. GET /v1/items?lat={LAT}&amp;amp;long={LONG}&amp;amp;keyword={}&amp;amp;page_size={}&amp;amp;page_num={}&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;responseBody:&lt;/div&gt;&lt;div&gt;{&lt;/div&gt;&lt;div&gt;&quot;items&quot;: [&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;{&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&quot;id&quot;: uuid,&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&quot;name&quot;: text,&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&quot;quantity: int&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;}&lt;/div&gt;&lt;div&gt;]&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;2. POST /v1/order&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;requestBody:&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;{&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&quot;latitude&quot;: lat,&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&quot;longitude&quot;: long&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&quot;items&quot;: [&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space-collapse: preserve;&quot;&gt;&#x9;&lt;/span&gt;{&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space-collapse: preserve;&quot;&gt;&#x9;&lt;/span&gt;&quot;id&quot;: uuid,&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space-collapse: preserve;&quot;&gt;&#x9;&lt;/span&gt;&quot;name&quot;: text,&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space-collapse: preserve;&quot;&gt;&#x9;&lt;/span&gt;&quot;quantity: int&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;}&lt;/div&gt;&lt;div&gt;]&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;}&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-212" y="1131" width="468" height="386" as="geometry" />
        </mxCell>
        <mxCell id="uZaY9qesb8EvW5n6evjB-10" value="4. High-Level Design" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=#666666;fillColor=#f5f5f5;fontColor=#333333;" vertex="1" parent="1">
          <mxGeometry x="503" y="606" width="129" height="26" as="geometry" />
        </mxCell>
        <mxCell id="uZaY9qesb8EvW5n6evjB-16" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="uZaY9qesb8EvW5n6evjB-14" target="uZaY9qesb8EvW5n6evjB-15">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="uZaY9qesb8EvW5n6evjB-14" value="Client" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="507.5" y="765" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="uZaY9qesb8EvW5n6evjB-18" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="uZaY9qesb8EvW5n6evjB-15" target="uZaY9qesb8EvW5n6evjB-17">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="I0LP1a1x3WWxmOki-7UH-4" value="GET" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="uZaY9qesb8EvW5n6evjB-18">
          <mxGeometry x="-0.0752" y="1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="I0LP1a1x3WWxmOki-7UH-2" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.25;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="uZaY9qesb8EvW5n6evjB-15" target="I0LP1a1x3WWxmOki-7UH-1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="uZaY9qesb8EvW5n6evjB-15" value="API Gateway" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="703" y="655.5" width="75" height="279" as="geometry" />
        </mxCell>
        <mxCell id="uZaY9qesb8EvW5n6evjB-24" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;startArrow=classic;startFill=1;" edge="1" parent="1" source="uZaY9qesb8EvW5n6evjB-17" target="uZaY9qesb8EvW5n6evjB-23">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="uZaY9qesb8EvW5n6evjB-17" value="Availability Service" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="887" y="765" width="80" height="60" as="geometry" />
        </mxCell>
        <mxCell id="uZaY9qesb8EvW5n6evjB-19" value="PostgresDB" style="shape=cylinder3;whiteSpace=wrap;html=1;boundedLbl=1;backgroundOutline=1;size=15;" vertex="1" parent="1">
          <mxGeometry x="1144" y="723.5" width="197" height="143" as="geometry" />
        </mxCell>
        <mxCell id="uZaY9qesb8EvW5n6evjB-20" value="&lt;div style=&quot;text-align: left;&quot;&gt;distribution_center {&lt;br&gt;id: uuid PK,&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;name: text,&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;location: longitude/latitute&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;}&lt;/span&gt;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="1177" y="883" width="153" height="84" as="geometry" />
        </mxCell>
        <mxCell id="uZaY9qesb8EvW5n6evjB-22" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;entryPerimeter=0;startArrow=classic;startFill=1;" edge="1" parent="1" source="uZaY9qesb8EvW5n6evjB-17" target="uZaY9qesb8EvW5n6evjB-19">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="uZaY9qesb8EvW5n6evjB-28" value="join of dc+item" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="uZaY9qesb8EvW5n6evjB-22">
          <mxGeometry x="-0.1893" relative="1" as="geometry">
            <mxPoint y="1" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="uZaY9qesb8EvW5n6evjB-26" style="rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;startArrow=classic;startFill=1;" edge="1" parent="1" source="uZaY9qesb8EvW5n6evjB-23" target="uZaY9qesb8EvW5n6evjB-25">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="uZaY9qesb8EvW5n6evjB-27" value="finds all available dc within 1 hour" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="uZaY9qesb8EvW5n6evjB-26">
          <mxGeometry x="-0.5591" y="-2" relative="1" as="geometry">
            <mxPoint x="56" y="-3" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="uZaY9qesb8EvW5n6evjB-23" value="Nearby Service" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="887" y="895" width="80" height="60" as="geometry" />
        </mxCell>
        <mxCell id="uZaY9qesb8EvW5n6evjB-25" value="DC Table" style="ellipse;whiteSpace=wrap;html=1;aspect=fixed;" vertex="1" parent="1">
          <mxGeometry x="1151.5" y="808" width="50.5" height="50.5" as="geometry" />
        </mxCell>
        <mxCell id="uZaY9qesb8EvW5n6evjB-30" value="item{ &#xa;id,&#xa;name,&#xa;description&#xa;}&#xa;&#xa;&#xa;inventory { - Inventory entity is a physical item at a specific location.&#xa;id: uuid PK&#xa;item_id,&#xa;dc_id,&#xa;quantity&#xa;}" style="text;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="1419.9951851851847" y="594.0029629629628" width="386" height="123" as="geometry" />
        </mxCell>
        <mxCell id="uZaY9qesb8EvW5n6evjB-31" value="&lt;div&gt;GET call:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;When a user makes a request to get availability for items A, B, and C from latitude X and longitude Y, here&#39;s what happens:&lt;/div&gt;&lt;div&gt;1. We make a request to the Availability Service with the user&#39;s location X and Y and any relevant filters.&lt;/div&gt;&lt;div&gt;2. The availability service fires a request to the Nearby Service with the user&#39;s location X and Y.&lt;/div&gt;&lt;div&gt;3. The nearby service returns us a list of DCs that can deliver to our location.&lt;/div&gt;&lt;div&gt;4. With the DCs available, the availability service query our database with those DC IDs.&lt;/div&gt;&lt;div&gt;5. We sum up the results and return them to our client.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;POST call:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;For an order, the process looks like this:&lt;/div&gt;&lt;div&gt;1. The user makes a request to the Orders Service to place an order for items A, B, and C.&lt;/div&gt;&lt;div&gt;2. The Orders Service makes creates a singular transaction which we submit to our Postgres leader.&amp;nbsp;&lt;/div&gt;&lt;div&gt;This transaction:&amp;nbsp;&lt;/div&gt;&lt;div&gt;- a. Checks the inventory for items A, B, and C &amp;gt; 0.&amp;nbsp;&lt;/div&gt;&lt;div&gt;- b. If any of the items are out of stock, the transaction fails.&amp;nbsp;&lt;/div&gt;&lt;div&gt;- c. If all items are in stock, the transaction records the order and updates the status for inventory items A, B, and C to &quot;ordered&quot;.&amp;nbsp;&lt;/div&gt;&lt;div&gt;- d. A new row is created in the Orders table (and OrderItems table) recording the order for A, B, and C.&amp;nbsp;&lt;/div&gt;&lt;div&gt;- e. The transaction is committed.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;3. If the transaction succeeds, we return the order to the user.&lt;/div&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="503" y="241" width="700" height="329" as="geometry" />
        </mxCell>
        <mxCell id="I0LP1a1x3WWxmOki-7UH-5" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="I0LP1a1x3WWxmOki-7UH-1" target="uZaY9qesb8EvW5n6evjB-19">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="I0LP1a1x3WWxmOki-7UH-6" value="write transaction" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="I0LP1a1x3WWxmOki-7UH-5">
          <mxGeometry x="-0.6109" y="-2" relative="1" as="geometry">
            <mxPoint x="30" y="-2" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="I0LP1a1x3WWxmOki-7UH-1" value="Order Service" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="890" y="657" width="80" height="60" as="geometry" />
        </mxCell>
        <mxCell id="I0LP1a1x3WWxmOki-7UH-3" value="POST" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="809" y="691" width="51" height="26" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
